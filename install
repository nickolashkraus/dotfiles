#!/usr/bin/env bash
#
# USAGE
#
#   install
#
# DESCRIPTION
#
#   Creates symbolic links to configuration files found in a 'dotfiles'
#   directory.
#
# vim: fdm=marker

# Determine location of 'dotfiles' directory
# DOTFILES=$(find "${HOME}" -type d -name "*dotfiles*")

DOTFILES="${HOME}/NickolasHKraus/dotfiles"

echo "'dotfiles' was found at the following location: ${DOTFILES}"
read -rp "Do you wish to proceed? [Y/n]: " proceed

if [[ ! "${proceed}" =~ [Y|y|YES|yes] ]]; then
  echo 'Aborting...'
  exit
fi

mkdir -p "${HOME}/.config"

# -----------------------------------------------------------------------------
# ${HOME}
# -----------------------------------------------------------------------------
rm "${HOME}/.agignore"
ln -s "${DOTFILES}/.agignore" "${HOME}/.agignore"

rm "${HOME}/.cobra.yaml"
ln -s "${DOTFILES}/.cobra.yaml" "${HOME}/.cobra.yaml"

rm "${HOME}/.gitconfig"
ln -s "${DOTFILES}/.gitconfig" "${HOME}/.gitconfig"

rm "${HOME}/.gitignore"
ln -s "${DOTFILES}/.gitignore" "${HOME}/.gitignore"

rm "${HOME}/.powerline.conf"
ln -s "${DOTFILES}/.powerline.conf" "${HOME}/.powerline.conf"

rm "${HOME}/.skhdrc"
ln -s "${DOTFILES}/.skhdrc" "${HOME}/.skhdrc"

rm "${HOME}/.tmux.conf"
ln -s "${DOTFILES}/.tmux.conf" "${HOME}/.tmux.conf"

rm "${HOME}/.vimrc"
ln -s "${DOTFILES}/.vimrc" "${HOME}/.vimrc"

rm "${HOME}/.yabairc"
ln -s "${DOTFILES}/.yabairc" "${HOME}/.yabairc"

rm "${HOME}/.zshrc"
ln -s "${DOTFILES}/.zshrc" "${HOME}/.zshrc"

# -----------------------------------------------------------------------------
# ${HOME}/.aws
# -----------------------------------------------------------------------------
mkdir -p "${HOME}/.aws"
rm "${HOME}/.aws/config"
ln -s "${DOTFILES}/.aws/config" "${HOME}/.aws/config"

# -----------------------------------------------------------------------------
# ${HOME}/.kube
# -----------------------------------------------------------------------------
mkdir -p "${HOME}/.kube"
rm -rf "${HOME}/.kube/granular.yaml"
ln -s "${DOTFILES}/.kube/granular.yaml" "${HOME}/.kube/granular.yaml"

# -----------------------------------------------------------------------------
# ${HOME}/.config/k9s
# -----------------------------------------------------------------------------
rm -rf "${HOME}/.config/k9s"
mkdir -p "${HOME}/.config/k9s"
ln -s "${DOTFILES}/.k9s/config.yml" \
  "${HOME}/.config/k9s/config.yml"
ln -s "${DOTFILES}/.k9s/skin.yml" \
  "${HOME}/.config/k9s/skin.yml"

# -----------------------------------------------------------------------------
# ${HOME}/.config/mpv
# -----------------------------------------------------------------------------
rm -rf "${HOME}/.config/mpv"
mkdir -p "${HOME}/.config/mpv"
ln -s "${DOTFILES}/.mpv/mpv.conf" "${HOME}/.config/mpv/mvp.conf"

# -----------------------------------------------------------------------------
# ${HOME}/.config/powerline
# -----------------------------------------------------------------------------
rm -rf "${HOME}/.config/powerline"
mkdir -p "${HOME}/.config/powerline"
mkdir -p "${HOME}/.config/powerline/colorschemes/tmux"
mkdir -p "${HOME}/.config/powerline/themes/tmux"

ln -s "${DOTFILES}/.powerline/colorschemes/tmux/default.json" \
  "${HOME}/.config/powerline/colorschemes/tmux/default.json"
ln -s "${DOTFILES}/.powerline/colorschemes/tmux/solarized.json" \
  "${HOME}/.config/powerline/colorschemes/tmux/solarized.json"
ln -s "${DOTFILES}/.powerline/colorschemes/tmux/gruvbox.json" \
  "${HOME}/.config/powerline/colorschemes/tmux/gruvbox.json"

ln -s "${DOTFILES}/.powerline/colorschemes/default.json" \
  "${HOME}/.config/powerline/colorschemes/default.json"
ln -s "${DOTFILES}/.powerline/colorschemes/solarized.json" \
  "${HOME}/.config/powerline/colorschemes/solarized.json"
ln -s "${DOTFILES}/.powerline/colorschemes/gruvbox.json" \
  "${HOME}/.config/powerline/colorschemes/gruvbox.json"

ln -s "${DOTFILES}/.powerline/themes/tmux/default.json" \
  "${HOME}/.config/powerline/themes/tmux/default.json"
ln -s "${DOTFILES}/.powerline/themes/powerline_terminus.json" \
  "${HOME}/.config/powerline/themes/powerline_terminus.json"

ln -s "${DOTFILES}/.powerline/colors.json" \
  "${HOME}/.config/powerline/colors.json"
ln -s "${DOTFILES}/.powerline/config.json" \
  "${HOME}/.config/powerline/config.json"

# -----------------------------------------------------------------------------
# ${HOME}/.ssh
# -----------------------------------------------------------------------------
mkdir -p "${HOME}/.ssh"
rm "${HOME}/.ssh/config"
ln -s "${DOTFILES}/.ssh/config" "${HOME}/.ssh/config"

# -----------------------------------------------------------------------------
# ${HOME}/.vim
# -----------------------------------------------------------------------------
mkdir -p "${HOME}/.vim"
rm "${HOME}/.vim/.en.utf-8.add"
ln -s "${DOTFILES}/.en.utf-8.add" "${HOME}/.vim/.en.utf-8.add"

# -----------------------------------------------------------------------------
# Homebrew Packages
#
# Files:
#   * Brewfile
#   * Brewfile.lock.json
# -----------------------------------------------------------------------------
brew bundle --file="${DOTFILES}/Brewfile" >/dev/null 2>&1

# -----------------------------------------------------------------------------
# Oh My Zsh Theme
#
# Files:
#   * nhk.zsh-theme
# -----------------------------------------------------------------------------
if [ -d "${HOME}/.oh-my-zsh" ]; then
  rm "${HOME}/.oh-my-zsh/custom/themes/nhk.zsh-theme"
  ln -s "${DOTFILES}/nhk.zsh-theme" \
    "${HOME}/.oh-my-zsh/custom/themes/nhk.zsh-theme"
else
  echo 'ERROR: .oh-my-zsh directory does not exist.'
fi

# -----------------------------------------------------------------------------
# Python Packages
#
# Files:
#   * requirements.txt
# -----------------------------------------------------------------------------
if [ -x "$(command -v pip)" ]; then
  pip install -r "${DOTFILES}/requirements.txt" >/dev/null 2>&1
else
  echo 'ERROR: pip not installed.'
fi
