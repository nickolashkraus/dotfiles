"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim Configuration
"
" DESCRIPTION
"   Configuration file for Vim.
"
"   Vim (short for Vi IMproved) is a highly configurable, powerful text editor
"   used primarily for programming and system administration. It is an
"   enhanced version of the Unix vi editor, offering many features for
"   efficient text manipulation.
"
"   See: https://www.vim.org
"
" INSTALLATION
"   Symlink file to $HOME/.vimrc:
"
"     ln -s .vimrc $HOME/.vimrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Disable vi compatibility mode (enables Vim's enhanced features).
set nocompatible

" Disable Markdown syntax highlighting via vim-polyglot (use vim-markdown
" instead).
"
" NOTE: This variable must be set *before* vim-polyglot is loaded.
let g:polyglot_disabled = ['markdown']

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-plug Configuration
"
" vim-plug is a minimalist and fast plugin manager for Vim and Neovim. As of
" 2025, vim-plug remains the most widely-used plugin manager across Vim and
" Neovim, thanks to its speed, ease of use, and robust features.
"
" See: https://github.com/junegunn/vim-plug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin()
" Language
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'godlygeek/tabular'
Plug 'preservim/vim-markdown'
Plug 'sheerun/vim-polyglot'

" NOTE: plug#end() automatically executes `filetype plugin indent on` and
" `syntax enable`.
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-go Configuration
"
" vim-go is a popular Vim plugin that provides comprehensive Go development
" support within Vim. It's designed to make Vim feel like a full-featured IDE
" for Go programming.
"
" NOTE: After installation, run:
"
"   :GoInstallBinaries
"
" See: https://github.com/fatih/vim-go
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Disable automatic linting (use ALE instead).
let g:go_fmt_autosave = 0
let g:go_imports_autosave = 0
let g:go_metalinter_autosave = 0
let g:go_metalinter_autosave_enabled = []
let g:go_metalinter_enabled = []

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Tabular Configuration
"
" Tabular is a popular Vim plugin for text alignment and formatting. It's
" designed to help you align text in columns, making it easier to create
" well-formatted tables, code, and other structured text.
"
" See: https://github.com/godlygeek/tabular
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" In visual mode, the alignment would apply to the selected lines. In normal
" mode Tabular attempts to guess the range.
if exists(':Tabularize')
  " Manual alignment mappings for pipe characters (e.g., Markdown tables).
  nmap <Leader><Bar> :Tabularize /<Bar><CR>
  vmap <Leader><Bar> :Tabularize /<Bar><CR>
endif

" Auto-align on pipe insert (convenient for real-time table editing).
inoremap <silent> <Bar> <Bar><Esc>:call <SID>align()<CR>a

" Courtesy of Tim Pope (https://gist.github.com/tpope/287147).
function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && \
    (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-markdown Configuration
"
" vim-markdown is a Vim plugin that enhances Markdown editing by adding
" features that are not available in Vim by default.
"
" See: https://github.com/preservim/vim-markdown
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable YAML front matter highlighting.
let g:vim_markdown_frontmatter = 1

" Enable TOML front matter.
let g:vim_markdown_toml_frontmatter = 1

" Enable JSON front matter.
let g:vim_markdown_json_frontmatter = 1

" Enable math syntax highlighting.
let g:vim_markdown_math = 1

" Show table of contents.
nmap <Leader>toc :Toc<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-polyglot Configuration
"
" vim-polyglot is a language pack plugin for Vim and Neovim that bundles
" syntax highlighting, indentation, and filetype detection for hundreds of
" programming and markup languagesâ€”all in one plugin.
"
" See: https://github.com/sheerun/vim-polyglot
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" No further configuration.
